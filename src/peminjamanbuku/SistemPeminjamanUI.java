/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package peminjamanbuku;

/**
 *
 * @author user
 */

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.io.InputStream;
import java.sql.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.lang.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
//import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.view.JasperViewer;
public class SistemPeminjamanUI extends JFrame{

    /**
     * Creates new form SistemPeminjamanUI
     */
    private Connection koneksi;
    private Statement statement;
    private Connection koneksi2;
    private Statement statement2;
    private String searchUser;
    private ResultSet result;
   private String idbuku;
    public SistemPeminjamanUI() throws SQLException {
             initComponents(); //inisialisasi komponen2 UI
        try {
            Class.forName("com.mysql.jdbc.Driver"); //load class driver
        } catch (Exception ex) {
            System.err.println("Unable to find and load driver");
            
        }
        connectToDB(); //fungsi yang didefinisikan user untuk koneksi ke database
        updateDB(); //fungsi yang mengubah status dalam tabel peminjaman buku menjadi terlambat bila buku lwt jngk wkt peminjaman
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        Date = new javax.swing.JLabel();
        panelSearchUser = new javax.swing.JPanel();
        labelnoID = new javax.swing.JLabel();
        labelNamaDepan = new javax.swing.JLabel();
        cari_noID = new javax.swing.JTextField();
        cari_namaDepan = new javax.swing.JTextField();
        SearchUser = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        panelUserInfo = new javax.swing.JPanel();
        labelUserID = new javax.swing.JLabel();
        labelUserFirst = new javax.swing.JLabel();
        labelUserLast = new javax.swing.JLabel();
        labelNoIdt = new javax.swing.JLabel();
        labelAlamat = new javax.swing.JLabel();
        labelTelep = new javax.swing.JLabel();
        idUser = new javax.swing.JTextField();
        namaDepan = new javax.swing.JTextField();
        namaBelakang = new javax.swing.JTextField();
        noIdentitas = new javax.swing.JTextField();
        telepon = new javax.swing.JTextField();
        editUserInfo = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        alamat = new javax.swing.JTextArea();
        createNewUser = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        panelSearchBook = new javax.swing.JPanel();
        searchBook = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        BookSearchResult = new javax.swing.JTable();
        SearchBook = new javax.swing.JButton();
        panelSelectBook = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        SelectedBook = new javax.swing.JTable();
        Pinjam = new javax.swing.JButton();
        labelLmPinj = new javax.swing.JLabel();
        lamaPinjam = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        Total = new javax.swing.JButton();
        Denda = new javax.swing.JButton();
        totalBiayaPinjam = new javax.swing.JTextField();
        denda = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Refresh = new javax.swing.JButton();
        panelBorrowRec = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelPeminjaman = new javax.swing.JTable();
        lihatCatPeminjaman = new javax.swing.JButton();
        cetakCatPeminj = new javax.swing.JButton();
        caricustomer = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        custcbbox = new javax.swing.JComboBox();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        kodeBuku = new javax.swing.JTextField();
        judulBuku = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        hargaBuku = new javax.swing.JTextField();
        TambahBuku = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tabelDataBaseBuku = new javax.swing.JTable();
        lihatDataBuku = new javax.swing.JButton();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Date.setText(getTime());

        panelSearchUser.setBorder(javax.swing.BorderFactory.createTitledBorder("Search User"));

        labelnoID.setText("no ID : ");

        labelNamaDepan.setText("Nama Depan : ");

        cari_noID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cari_noIDMouseClicked(evt);
            }
        });
        cari_noID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cari_noIDActionPerformed(evt);
            }
        });

        cari_namaDepan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cari_namaDepanMouseClicked(evt);
            }
        });

        SearchUser.setText("Cari");
        SearchUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchUserActionPerformed(evt);
            }
        });

        jLabel1.setText("OR");

        javax.swing.GroupLayout panelSearchUserLayout = new javax.swing.GroupLayout(panelSearchUser);
        panelSearchUser.setLayout(panelSearchUserLayout);
        panelSearchUserLayout.setHorizontalGroup(
            panelSearchUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSearchUserLayout.createSequentialGroup()
                .addGroup(panelSearchUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelnoID, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelNamaDepan, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSearchUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cari_noID)
                    .addComponent(cari_namaDepan, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSearchUserLayout.createSequentialGroup()
                .addGap(0, 144, Short.MAX_VALUE)
                .addGroup(panelSearchUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSearchUserLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(118, 118, 118))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSearchUserLayout.createSequentialGroup()
                        .addComponent(SearchUser)
                        .addGap(101, 101, 101))))
        );
        panelSearchUserLayout.setVerticalGroup(
            panelSearchUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSearchUserLayout.createSequentialGroup()
                .addGroup(panelSearchUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelnoID)
                    .addComponent(cari_noID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelSearchUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNamaDepan)
                    .addComponent(cari_namaDepan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(SearchUser)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelUserInfo.setBorder(javax.swing.BorderFactory.createTitledBorder("User Info"));

        labelUserID.setText("no ID : ");

        labelUserFirst.setText("Nama Depan : ");

        labelUserLast.setText("Nama Belakang : ");

        labelNoIdt.setText("No. KTP/SIM : ");

        labelAlamat.setText("Alamat : ");

        labelTelep.setText("Telepon : ");

        editUserInfo.setText("Edit");
        editUserInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUserInfoActionPerformed(evt);
            }
        });

        alamat.setColumns(20);
        alamat.setRows(5);
        jScrollPane4.setViewportView(alamat);

        createNewUser.setText("New");
        createNewUser.setActionCommand("NewUser");
        createNewUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNewUserActionPerformed(evt);
            }
        });

        Clear.setText("Clear");
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelUserInfoLayout = new javax.swing.GroupLayout(panelUserInfo);
        panelUserInfo.setLayout(panelUserInfoLayout);
        panelUserInfoLayout.setHorizontalGroup(
            panelUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUserInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelTelep)
                    .addComponent(labelUserFirst)
                    .addComponent(labelUserID)
                    .addComponent(labelUserLast)
                    .addComponent(labelNoIdt)
                    .addComponent(labelAlamat))
                .addGap(18, 18, 18)
                .addGroup(panelUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelUserInfoLayout.createSequentialGroup()
                        .addGroup(panelUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idUser)
                            .addComponent(namaDepan)
                            .addComponent(telepon)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(10, 10, 10))
                    .addGroup(panelUserInfoLayout.createSequentialGroup()
                        .addGroup(panelUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(noIdentitas, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(namaBelakang))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelUserInfoLayout.createSequentialGroup()
                .addComponent(createNewUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                .addComponent(Clear)
                .addGap(18, 18, 18)
                .addComponent(editUserInfo)
                .addContainerGap())
        );
        panelUserInfoLayout.setVerticalGroup(
            panelUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelUserInfoLayout.createSequentialGroup()
                .addGroup(panelUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelUserID)
                    .addComponent(idUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(namaDepan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelUserFirst))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelUserLast)
                    .addComponent(namaBelakang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(panelUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNoIdt)
                    .addComponent(noIdentitas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panelUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelUserInfoLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(labelAlamat)
                        .addGroup(panelUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelUserInfoLayout.createSequentialGroup()
                                .addGap(127, 127, 127)
                                .addGroup(panelUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(editUserInfo)
                                    .addComponent(createNewUser)
                                    .addComponent(Clear)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelUserInfoLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelUserInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(labelTelep, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(telepon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(61, 61, 61))))
                    .addGroup(panelUserInfoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        panelSearchBook.setBorder(javax.swing.BorderFactory.createTitledBorder("Search Book"));

        searchBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchBookMouseClicked(evt);
            }
        });

        BookSearchResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "ID Buku", "Judul Buku", "Harga"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        BookSearchResult.setColumnSelectionAllowed(true);
        BookSearchResult.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BookSearchResultMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(BookSearchResult);
        BookSearchResult.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        SearchBook.setText("Cari");
        SearchBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSearchBookLayout = new javax.swing.GroupLayout(panelSearchBook);
        panelSearchBook.setLayout(panelSearchBookLayout);
        panelSearchBookLayout.setHorizontalGroup(
            panelSearchBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSearchBookLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelSearchBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelSearchBookLayout.createSequentialGroup()
                        .addComponent(searchBook, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SearchBook))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelSearchBookLayout.setVerticalGroup(
            panelSearchBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSearchBookLayout.createSequentialGroup()
                .addGroup(panelSearchBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchBook))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(120, Short.MAX_VALUE))
        );

        panelSelectBook.setBorder(javax.swing.BorderFactory.createTitledBorder("Buku yang Dipilih"));

        SelectedBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Buku", "Judul Buku", "Harga", "Cek"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SelectedBook.setAutoscrolls(false);
        SelectedBook.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jScrollPane2.setViewportView(SelectedBook);

        Pinjam.setText("Pinjam");
        Pinjam.setActionCommand("hari");
        Pinjam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PinjamMouseClicked(evt);
            }
        });

        labelLmPinj.setText("Lama Pinjam");

        jLabel3.setText("hari");

        javax.swing.GroupLayout panelSelectBookLayout = new javax.swing.GroupLayout(panelSelectBook);
        panelSelectBook.setLayout(panelSelectBookLayout);
        panelSelectBookLayout.setHorizontalGroup(
            panelSelectBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSelectBookLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelSelectBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(panelSelectBookLayout.createSequentialGroup()
                        .addComponent(labelLmPinj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lamaPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Pinjam))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(71, 71, 71))
        );
        panelSelectBookLayout.setVerticalGroup(
            panelSelectBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSelectBookLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelSelectBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Pinjam)
                    .addComponent(labelLmPinj)
                    .addComponent(lamaPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap())
        );

        Total.setText("Total Biaya Pinjam");
        Total.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TotalMouseClicked(evt);
            }
        });

        Denda.setText("Denda");
        Denda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DendaActionPerformed(evt);
            }
        });

        jLabel2.setText("rupiah");

        jLabel4.setText("rupiah");

        Refresh.setText("Refresh All");
        Refresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RefreshMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Total)
                    .addComponent(Denda))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(denda, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(totalBiayaPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addComponent(jLabel2))))
                .addContainerGap(152, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Total)
                    .addComponent(totalBiayaPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Denda)
                        .addComponent(denda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(Refresh)
                .addGap(33, 33, 33))
        );

        panelBorrowRec.setBorder(javax.swing.BorderFactory.createTitledBorder("Catatan Peminjaman"));

        tabelPeminjaman.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Buku", "Judul Buku", "Tanggal Pinjam", "Tanggal Kembali", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabelPeminjaman.setColumnSelectionAllowed(true);
        tabelPeminjaman.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelPeminjamanMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabelPeminjaman);
        tabelPeminjaman.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        lihatCatPeminjaman.setText("Lihat");
        lihatCatPeminjaman.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lihatCatPeminjamanMouseClicked(evt);
            }
        });

        cetakCatPeminj.setText("Cetak Catatan Peminjaman");
        cetakCatPeminj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cetakCatPeminjActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBorrowRecLayout = new javax.swing.GroupLayout(panelBorrowRec);
        panelBorrowRec.setLayout(panelBorrowRecLayout);
        panelBorrowRecLayout.setHorizontalGroup(
            panelBorrowRecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorrowRecLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBorrowRecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(panelBorrowRecLayout.createSequentialGroup()
                        .addComponent(lihatCatPeminjaman)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cetakCatPeminj)))
                .addContainerGap())
        );
        panelBorrowRecLayout.setVerticalGroup(
            panelBorrowRecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorrowRecLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelBorrowRecLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lihatCatPeminjaman)
                    .addComponent(cetakCatPeminj))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(368, 368, 368))
        );

        caricustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caricustomerActionPerformed(evt);
            }
        });
        caricustomer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                caricustomerKeyPressed(evt);
            }
        });

        jLabel8.setText("Cari customer");

        custcbbox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "- Hasil-" }));
        custcbbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custcbboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelSearchUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelUserInfo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelSelectBook, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelSearchBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(Date, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(panelBorrowRec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel8)
                        .addGap(51, 51, 51)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(custcbbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(caricustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 5, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(Date)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(panelSearchUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panelUserInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(panelSearchBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panelSelectBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(panelBorrowRec, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(caricustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addComponent(custcbbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );

        jTabbedPane1.addTab("Peminjaman", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Tambah Buku Baru"));

        jLabel5.setText("Kode Buku");

        jLabel6.setText("Judul Buku");

        jLabel7.setText("Harga");

        TambahBuku.setText("Tambah");
        TambahBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TambahBukuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(kodeBuku))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(judulBuku)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(TambahBuku)
                                .addGap(0, 94, Short.MAX_VALUE))
                            .addComponent(hargaBuku))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(kodeBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(judulBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(hargaBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                .addComponent(TambahBuku)
                .addContainerGap())
        );

        jPanel3.setBounds(10, 10, 270, 270);
        jLayeredPane1.add(jPanel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Lihat Data Buku"));

        tabelDataBaseBuku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(tabelDataBaseBuku);

        lihatDataBuku.setText("Lihat");
        lihatDataBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lihatDataBukuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(lihatDataBuku))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lihatDataBuku)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBounds(290, 10, 500, 620);
        jLayeredPane1.add(jPanel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTabbedPane1.addTab("Tambah Data Buku Baru", jLayeredPane1);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 16, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 668, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(643, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchUserActionPerformed
                
        String noID = cari_noID.getText(); // mengambil text dari field noID disimpan di variable String noID
        String namaDpn = cari_namaDepan.getText(); 
        //String searchUser;
        
        //eksekusi query berdasarkan data yang diinput 
        if(cari_noID.getText().isEmpty()){
            System.out.println("no null");
            searchUser = "SELECT * FROM memberinfo WHERE `nama_depan` = '" + namaDpn + "'";
        }
        else if(cari_namaDepan.getText().isEmpty()){
           System.out.println("nama null");
           searchUser = "SELECT * FROM `memberinfo` WHERE `noID`= " + Integer.parseInt(noID);
        }
          try {
            result = statement.executeQuery(searchUser);
            
            //bila data tidak ada popup alert dialog
            if(!result.next()){ //by creating this conditional statement first the next cursor skip to next BAD FOR multiple row
             
             JOptionPane.showMessageDialog(this,"Data tidak ditemukan! Daftar baru? ","Pesan",JOptionPane.INFORMATION_MESSAGE);
            }
           else{
                   idUser.setText(Integer.toString(result.getInt("noID")));
                   namaDepan.setText(result.getString("nama_depan"));
                   namaBelakang.setText(result.getString("nama_belakang"));
                   noIdentitas.setText(result.getString("noIdentitas"));
                   alamat.setText(result.getString("alamat"));
                   telepon.setText(Integer.toString(result.getInt("telepon")));
                   
              }

           }catch (SQLException ex) {
            Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
        }
                  ((DefaultTableModel)tabelPeminjaman.getModel()).getDataVector().removeAllElements();
    }//GEN-LAST:event_SearchUserActionPerformed

    private void SearchBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBookActionPerformed
        String key = searchBook.getText();
        System.out.println("key"+key);
        String[][] data = null;
        
        String search = "SELECT noID_buku, judul, harga FROM `buku_db` WHERE `judul` LIKE '"+key+"%' AND `status` = 'ada' ";
        try {
            result = statement.executeQuery(search);
            ResultSetMetaData md = result.getMetaData();
            int colCount = md.getColumnCount();
            Vector columns = new Vector();
            for (int i =1; i <= colCount; i++){
             columns.add(md.getColumnName(i));
            }
            Vector vdata = new Vector();
            if(!result.next()){
              JOptionPane.showMessageDialog(this,"Buku tidak ditemukan! ","Pesan",JOptionPane.INFORMATION_MESSAGE);
            } else{
                do{
                    Vector row = new Vector(colCount);          
                    for(int j=1; j<=colCount; j++){
                        row.addElement(result.getObject(j));
                        //System.out.println(result.getObject(j));
                    }
                    vdata.addElement(row);
                }while(result.next());
            }
           
            
            BookSearchResult.setModel(new javax.swing.table.DefaultTableModel(vdata,columns));
        } catch (SQLException ex) {
            Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_SearchBookActionPerformed

    private void editUserInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editUserInfoActionPerformed
        
        
        String sql = "UPDATE memberinfo SET `alamat` = '"+alamat.getText()+"', `noIdentitas` = '"+noIdentitas.getText()+"', `telepon` = '"+telepon.getText()+"' WHERE `noID` = '"+idUser.getText()+"'";
        try {
            statement.executeUpdate(sql);
            JOptionPane.showMessageDialog(this,"Data sudah diperbaharui!","Pesan",JOptionPane.INFORMATION_MESSAGE);

        } catch (SQLException ex) {
            Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this,"Pembaharuan data gagal!","Pesan",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_editUserInfoActionPerformed

    private void createNewUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNewUserActionPerformed
      String insert = "INSERT memberinfo(nama_depan,nama_belakang,noIdentitas,alamat,telepon)  VALUES('"+namaDepan.getText()+"','"+namaBelakang.getText()+"',"+noIdentitas.getText()+",'"+alamat.getText()+"',"+telepon.getText()+")";
        try {
            statement.executeUpdate(insert);
            JOptionPane.showMessageDialog(this,"Anda telah terdaftar sebagai anggota baru! ","Pesan",JOptionPane.INFORMATION_MESSAGE);
            
        } catch (SQLException ex) {
            Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this,"Input gagal!","Pesan",JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_createNewUserActionPerformed

    private void cari_noIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cari_noIDMouseClicked
        cari_noID.setText(null);
        cari_namaDepan.setText(null);
    }//GEN-LAST:event_cari_noIDMouseClicked

    private void cari_namaDepanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cari_namaDepanMouseClicked
        cari_noID.setText(null);
        cari_namaDepan.setText(null);
    }//GEN-LAST:event_cari_namaDepanMouseClicked

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        idUser.setText(null);
        namaDepan.setText(null);
        namaBelakang.setText(null);
        noIdentitas.setText(null);
        alamat.setText(null);
        telepon.setText(null);
    }//GEN-LAST:event_ClearActionPerformed

    private void BookSearchResultMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BookSearchResultMouseClicked
       
        int col= BookSearchResult.getColumnCount();
        int row = BookSearchResult.getSelectedRow();
        System.out.println(row);
        Vector data = new Vector();
       for(int i=0;i<col;i++){
        data.addElement(BookSearchResult.getModel().getValueAt(row, i));
       }
       ((DefaultTableModel)SelectedBook.getModel()).addRow(data);
    }//GEN-LAST:event_BookSearchResultMouseClicked

    private void searchBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchBookMouseClicked
        searchBook.setText(null);        
    }//GEN-LAST:event_searchBookMouseClicked

    private void PinjamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PinjamMouseClicked
      
        int hari = Integer.parseInt(lamaPinjam.getText());
        int id_user = Integer.parseInt(idUser.getText());
        String status = "keluar";
       
        //prepare for sql
        String sql = "INSERT peminjaman(noID, id_buku, tgl_pinjam, jangka_waktu, tgl_kembali, status) VALUES(?, ?, ?, ?, ?, ?)";
        String sql2 = "UPDATE buku_db SET `status` = 'keluar' WHERE noID_buku = ?";
        PreparedStatement pstat = null;
        PreparedStatement pstat2 = null;
        Calendar current = Calendar.getInstance();
        java.util.Date now = new java.util.Date();
        now = current.getTime(); //set current time
        current.add(Calendar.DATE,hari);
        java.util.Date after = current.getTime();
        long t = now.getTime();
        long t2 = after.getTime();
        //set to sql date
        java.sql.Date TglPinjam = new java.sql.Date(t);
        java.sql.Date TglKmbl = new java.sql.Date(t2);
       
        int data[] = new int[10];
        int count = SelectedBook.getRowCount();
        int n = 0;
        try {
            koneksi.setAutoCommit(false);
            pstat = koneksi.prepareStatement(sql);
            pstat2 = koneksi.prepareStatement(sql2);
        
        for(int i=0; i < count; i++){
           if(SelectedBook.getValueAt(i, 3) == true){
                int idbuku = (int) SelectedBook.getValueAt(i, 0); //getID buku
               //System.out.println("loop");
                try {
                    pstat = koneksi.prepareStatement(sql);
                    pstat.setInt(1,id_user);
                    pstat.setInt(2,idbuku);
                    pstat.setDate(3,TglPinjam);
                    pstat.setInt(4,hari);
                    pstat.setDate(5,TglKmbl);
                    pstat.setString(6,status);
                    pstat.executeUpdate();
                    pstat2.setInt(1, idbuku);
                    pstat2.executeUpdate();
                    koneksi.commit();
                 } catch (SQLException ex) {
                    Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                     //System.out.println("n="+n + "i =" + i);  
                 data[n] = i;
                n++;
             
             }
           
        }
     } catch (SQLException ex) {
            Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
            if(koneksi != null){
                try{
                    System.err.print("Transaction is being rolled back");
                    koneksi.rollback();
                }catch(SQLException e){
                   Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }finally{
            if(pstat != null)
                try {
                pstat.close();
            } catch (SQLException ex) {
                Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            if(pstat2 != null)
                try {
                pstat2.close();
            } catch (SQLException ex) {
                Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                koneksi.setAutoCommit(true);
            } catch (SQLException ex) {
                Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        for(int i=0;i<n;i++){
          //System.out.println("i"+i);
          ((DefaultTableModel)SelectedBook.getModel()).removeRow(data[i]-i);
       }
    
       
    }//GEN-LAST:event_PinjamMouseClicked

    private void TotalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TotalMouseClicked
        //hitung total biaya peminjaman
      int sum,total=0;
      String status = "keluar";
       String sql =  "SELECT buku_db.harga, peminjaman.jangka_waktu FROM peminjaman INNER JOIN buku_db ON buku_db.noID_buku = peminjaman.id_buku WHERE peminjaman.noID = '" + idUser.getText()+"' AND peminjaman.status = '" + status+"'";
        try {
            result = statement.executeQuery(sql);
            while(result.next()){
                int harga = result.getInt("harga");
                int jangkaWkt = result.getInt("jangka_waktu");
                System.out.println("harga"+ harga);
                System.out.println("jangka" +jangkaWkt);
                sum = harga * jangkaWkt;
                System.out.println("sum"+sum);
                total += sum;
                System.out.println("total"+total);
               }
         } catch (SQLException ex) {
            Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        totalBiayaPinjam.setText(Integer.toString(total));
        System.out.println(total);
    }//GEN-LAST:event_TotalMouseClicked

    private void lihatCatPeminjamanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lihatCatPeminjamanMouseClicked
         DefaultTableModel tm = (DefaultTableModel)tabelPeminjaman.getModel();
         tm.getDataVector().removeAllElements();
         tabelPeminjaman.updateUI();
    
        try {
            //display catatan peminjaman based on user
            updateDB();
        } catch (SQLException ex) {
            Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        String sql = "SELECT peminjaman.id_buku, buku_db.judul, peminjaman.tgl_pinjam, peminjaman.tgl_kembali, peminjaman.status FROM peminjaman INNER JOIN buku_db ON buku_db.noID_buku = peminjaman.id_buku WHERE peminjaman.noID = '" +idUser.getText()+"'";
        try {
            result = statement.executeQuery(sql);
       //Vector vdata = new Vector();
      
        if(!result.next()){
              JOptionPane.showMessageDialog(this,"Belum ada peminjaman! ","Pesan",JOptionPane.INFORMATION_MESSAGE);
            } else{
                do{
                    Vector row = new Vector(5);          
                    for(int j=1; j<=5; j++){
                        row.addElement(result.getObject(j));
                        System.out.println(result.getObject(j));
                    }
                    ((DefaultTableModel)tabelPeminjaman.getModel()).addRow(row);
                    //row.addElement(boolean);
                    //vdata.addElement(row);
                }while(result.next());
                 
        }
         
        } catch (SQLException ex) {
            Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_lihatCatPeminjamanMouseClicked

    private void tabelPeminjamanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelPeminjamanMouseClicked
        int row = tabelPeminjaman.getSelectedRow();
        int idbuku = (int)tabelPeminjaman.getValueAt(row, 0);
    
        String sql = "UPDATE peminjaman SET status = 'kembali' WHERE id_buku = '"+idbuku+"'AND noID = '" + idUser.getText() + "'";
        String sql2 = "UPDATE buku_db SET `status` = 'ada' WHERE noID_buku = '"+idbuku+"'";
        PreparedStatement pstat = null;
        PreparedStatement pstat2 =  null;
        try {
            koneksi.setAutoCommit(false);
            pstat = koneksi.prepareStatement(sql);
            pstat2 = koneksi.prepareStatement(sql2);
               pstat.executeUpdate();
               pstat2.executeUpdate();
         } catch (SQLException ex) {
            Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
            if(pstat != null)
                try {
                pstat.close();
            } catch (SQLException ex) {
                Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            if(pstat2 != null)
                try {
                pstat2.close();
            } catch (SQLException ex) {
                Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            koneksi.setAutoCommit(true);
        } catch (SQLException ex) {
            Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        tabelPeminjaman.setValueAt("kembali", row, 4);

    }//GEN-LAST:event_tabelPeminjamanMouseClicked

    private void RefreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RefreshMouseClicked
   
    DefaultTableModel tm = (DefaultTableModel)tabelPeminjaman.getModel();
    DefaultTableModel tm2 = (DefaultTableModel)SelectedBook.getModel();
    DefaultTableModel tm3 = (DefaultTableModel)BookSearchResult.getModel();
    
    tm.getDataVector().removeAllElements();
    tm2.getDataVector().removeAllElements();
    tm3.getDataVector().removeAllElements();
    
    tabelPeminjaman.updateUI();
    SelectedBook.updateUI();
    BookSearchResult.updateUI();
    }//GEN-LAST:event_RefreshMouseClicked

    private void DendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DendaActionPerformed
        //select from db where user=getuserID() and status = terlambat
        //count row, berapa yang status terlambat  untuk this.user x100 rupiah
        int count = 0;
        int total;
        long hari;
        long day;
        long sekarang = new java.util.Date().getTime();
        java.util.Date kembali = new java.util.Date();
        String sql = "SELECT * FROM peminjaman WHERE status = 'terlambat' AND noID = '"+idUser.getText()+"'";
        try {
            result = statement.executeQuery(sql);
        } catch (SQLException ex) {
            Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            while(result.next()){
                ++count;
                kembali = result.getDate("tgl_kembali");
            //System.out.println(result.getString("status"));
            //System.out.println(count);
            }
            hari = sekarang - kembali.getTime();
            day = hari / (24*60*60*1000);
            //System.out.println("day =" + day);
            total = count * 200 * (int)day;
        
        denda.setText(Integer.toString(total));
        } catch (SQLException ex) {
            Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DendaActionPerformed

    private void TambahBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TambahBukuActionPerformed
        String sql = "INSERT buku_db VALUES('"+Integer.parseInt(kodeBuku.getText())+"', '"+judulBuku.getText()+"', '"+Integer.parseInt(hargaBuku.getText())+"', 'ada')";
         try {
            statement.executeUpdate(sql);
            JOptionPane.showMessageDialog(this,"Data buku baru telah ditambahkan! ","Pesan",JOptionPane.INFORMATION_MESSAGE);
            clearfield();
        } catch (SQLException ex) {
            Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_TambahBukuActionPerformed

    private void lihatDataBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lihatDataBukuActionPerformed
       String sql = "SELECT * FROM buku_db";
        try {
            result = statement.executeQuery(sql);
           
            ResultSetMetaData md = result.getMetaData();
            result.getRow();
            int colCount = md.getColumnCount();
            Vector columns = new Vector();
            for (int i =1; i <= colCount; i++){
             columns.add(md.getColumnName(i));
            }
            Vector vdata = new Vector();
            while(result.next()){
                Vector data = new Vector(colCount);
                for(int j=1;j<=colCount;j++){
                data.addElement(result.getObject(j));
                }
                vdata.addElement(data);
            }
             tabelDataBaseBuku.setModel(new javax.swing.table.DefaultTableModel(vdata,columns));
        } catch (SQLException ex) {
            Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lihatDataBukuActionPerformed

    private void cari_noIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cari_noIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cari_noIDActionPerformed

    private void caricustomerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_caricustomerKeyPressed
        // TODO add your handling code here:
        int code = evt.getKeyCode();
        if(code == KeyEvent.VK_ENTER){
            try {
                koneksi2 = DriverManager.getConnection("jdbc:mysql://localhost:3306/winestore","root",""); //melakukan koneksi ke database
                statement2 = koneksi2.createStatement();
                String sql = "SELECT surname FROM customer WHERE initial = '"+caricustomer.getText()+"'";
             
                result =  statement2.executeQuery(sql);
                while(result.next()){
                String s = result.getString("surname");
                custcbbox.addItem(s);
                
                }
            } catch (SQLException ex) {
                Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
          if(code == KeyEvent.VK_BACK_SPACE){
              custcbbox.removeAllItems();
              custcbbox.addItem("-Hasil-");
          }
    }//GEN-LAST:event_caricustomerKeyPressed

    private void custcbboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custcbboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_custcbboxActionPerformed

    private void caricustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caricustomerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_caricustomerActionPerformed

    private void cetakCatPeminjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cetakCatPeminjActionPerformed
        try {
//            try {
//                //this.connectToDB();
            DatabaseMetaData dbm,dbm2;
            try {
                dbm = koneksi.getMetaData();
                
                ResultSet table = dbm.getTables(null, null, "history_extended", null);
            if(table.next()){
              statement.executeUpdate("drop view history_extended");

            }
            
            dbm2 = koneksi.getMetaData();
            ResultSet table2 = dbm2.getTables(null,null,"history_itemvalue_pivot",null);
            if(table2.next()){
                                statement.executeUpdate("drop view history_itemvalue_pivot");

            }
            } catch (SQLException ex) {
                Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            
//            } catch (SQLException ex) {
//                Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
//            }
            String sql = "create view history_extended as (select history.*, case when itemname = 'A' then itemvalue end as A, case when itemname = 'B' then itemvalue end as B, case when itemname = 'C' then itemvalue end as C from history)";

            String sql2 = "create view history_itemvalue_pivot as (select hostid, sum(A) as A,  sum(B) as B, sum(C) as C from history_extended group by hostid)";
            try {
                //statement.executeQuery(sql);
                //statement.executeQuery(sql2);
                statement.executeUpdate(sql);
                statement.executeUpdate(sql2);
                
            } catch (SQLException ex) {
                Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            
           
            JasperReport jasperReport = JasperCompileManager.compileReport("D:\\NetBeansProjects\\PeminjamanBuku\\src\\peminjamanbuku\\report1.jrxml");
            JasperPrint jasperPrint  = JasperFillManager.fillReport(jasperReport, new HashMap(), koneksi);
            JasperExportManager.exportReportToPdfFile(jasperPrint,"sample.pdf");
            JasperViewer.viewReport(jasperPrint,false);
        } catch (JRException ex) {
            Logger.getLogger(SistemPeminjamanUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_cetakCatPeminjActionPerformed
    public void connectToDB() throws SQLException{
         koneksi = DriverManager.getConnection("jdbc:mysql://localhost:3306/javadb","root",""); //melakukan koneksi ke database
         statement = koneksi.createStatement(); //untuk menyiapkan statement sql
         //System.out.println(koneksi);
    }
    public void updateDB() throws SQLException{
        java.sql.Date date = new java.sql.Date(new java.util.Date().getTime());
        
        String sql = "UPDATE peminjaman SET status='terlambat' WHERE tgl_kembali  < '"+date+"' AND status = 'keluar'";
        statement.executeUpdate(sql);
    }
    public void clearfield(){
       kodeBuku.setText(null);
       judulBuku.setText(null);
       hargaBuku.setText(null);
    }
    String getTime(){
       Calendar current = Calendar.getInstance();
       java.util.Date now = new java.util.Date();
       now = current.getTime();
       SimpleDateFormat format = new SimpleDateFormat("dd MMM yyy | hh:mm:ss a");
       String time = format.format(now);
       return time;
    
    }
   
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BookSearchResult;
    private javax.swing.JButton Clear;
    private javax.swing.JLabel Date;
    private javax.swing.JButton Denda;
    private javax.swing.JButton Pinjam;
    private javax.swing.JButton Refresh;
    private javax.swing.JButton SearchBook;
    private javax.swing.JButton SearchUser;
    private javax.swing.JTable SelectedBook;
    private javax.swing.JButton TambahBuku;
    private javax.swing.JButton Total;
    private javax.swing.JTextArea alamat;
    private javax.swing.JTextField cari_namaDepan;
    private javax.swing.JTextField cari_noID;
    private javax.swing.JTextField caricustomer;
    private javax.swing.JButton cetakCatPeminj;
    private javax.swing.JButton createNewUser;
    private javax.swing.JComboBox custcbbox;
    private javax.swing.JTextField denda;
    private javax.swing.JButton editUserInfo;
    private javax.swing.JTextField hargaBuku;
    private javax.swing.JTextField idUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField judulBuku;
    private javax.swing.JTextField kodeBuku;
    private javax.swing.JLabel labelAlamat;
    private javax.swing.JLabel labelLmPinj;
    private javax.swing.JLabel labelNamaDepan;
    private javax.swing.JLabel labelNoIdt;
    private javax.swing.JLabel labelTelep;
    private javax.swing.JLabel labelUserFirst;
    private javax.swing.JLabel labelUserID;
    private javax.swing.JLabel labelUserLast;
    private javax.swing.JLabel labelnoID;
    private javax.swing.JTextField lamaPinjam;
    private javax.swing.JButton lihatCatPeminjaman;
    private javax.swing.JButton lihatDataBuku;
    private javax.swing.JTextField namaBelakang;
    private javax.swing.JTextField namaDepan;
    private javax.swing.JTextField noIdentitas;
    private javax.swing.JPanel panelBorrowRec;
    private javax.swing.JPanel panelSearchBook;
    private javax.swing.JPanel panelSearchUser;
    private javax.swing.JPanel panelSelectBook;
    private javax.swing.JPanel panelUserInfo;
    private javax.swing.JTextField searchBook;
    private javax.swing.JTable tabelDataBaseBuku;
    private javax.swing.JTable tabelPeminjaman;
    private javax.swing.JTextField telepon;
    private javax.swing.JTextField totalBiayaPinjam;
    // End of variables declaration//GEN-END:variables
}
